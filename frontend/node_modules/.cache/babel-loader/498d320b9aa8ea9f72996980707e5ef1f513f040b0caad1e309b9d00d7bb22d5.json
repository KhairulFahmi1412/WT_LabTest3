{"ast":null,"code":"import { mapActions, mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      formName: '',\n      formEmail: '',\n      isEditMode: false,\n      editingUserId: null\n    };\n  },\n  computed: {\n    ...mapGetters(['users', 'currentUser'])\n  },\n  methods: {\n    ...mapActions(['fetchUsers', 'addUser', 'updateUser', 'deleteUser', 'setCurrentUser']),\n    onSubmit() {\n      // Check if either the name or email is empty\n      if (!this.formName.trim() || !this.formEmail.trim()) {\n        // Display a popup alert if either is empty\n        alert('Both name and email must be provided.');\n        return; // Exit the function to prevent further execution\n      }\n\n      // Proceed with adding the user if both fields are filled\n      this.addUser({\n        name: this.formName,\n        email: this.formEmail\n      }).then(() => {\n        this.formName = '';\n        this.formEmail = '';\n        // Assuming you have a method or action to clear the current user selection\n        this.setCurrentUser({\n          id: null,\n          name: '',\n          email: ''\n        });\n        this.isEditMode = false; // Reset edit mode if applicable\n      });\n    },\n    updateUserDetails() {\n      // Check if either the name or email is empty\n      if (!this.formName.trim() || !this.formEmail.trim()) {\n        // Display a popup alert if either is empty\n        alert('Both name and email must be provided.');\n        return; // Exit the function to prevent further execution\n      }\n\n      // Proceed with the update if both fields are filled\n      if (this.isEditMode) {\n        this.updateUser({\n          id: this.editingUserId,\n          name: this.formName,\n          email: this.formEmail\n        }).then(() => {\n          this.resetForm();\n        });\n      }\n    },\n    chooseUser(user) {\n      this.editingUserId = user.id;\n      this.formName = user.name;\n      this.formEmail = user.email;\n      this.isEditMode = true;\n    },\n    resetForm() {\n      this.editingUserId = null;\n      this.formName = '';\n      this.formEmail = '';\n      this.isEditMode = false;\n    }\n  },\n  created() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","data","formName","formEmail","isEditMode","editingUserId","computed","methods","onSubmit","trim","alert","addUser","name","email","then","setCurrentUser","id","updateUserDetails","updateUser","resetForm","chooseUser","user","created","fetchUsers"],"sources":["C:\\Users\\kaifa\\Desktop\\WT_LastLab\\frontend\\src\\components\\UserManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h2>User Form</h2>\r\n        <form @submit.prevent=\"onSubmit\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"name\" class=\"form-label\">Name:</label>\r\n            <input type=\"text\" v-model=\"formName\" class=\"form-control\" id=\"name\" >\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"email\" class=\"form-label\">Email:</label>\r\n            <input type=\"email\" v-model=\"formEmail\" class=\"form-control\" id=\"email\" >\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-success me-2\">Save</button>\r\n          <button type=\"button\" @click=\"updateUserDetails\" class=\"btn btn-primary\">Update</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n\r\n        <div class=\"user-list-container\">        <h2>List of Users</h2>\r\n        <hr />\r\n          <ul class=\"list-group\">\r\n            <li v-for=\"user in users\" :key=\"user.id\" class=\"list-group-item user-item\">\r\n              <div class=\"user-info\">\r\n                <h5>{{ user.name }}</h5>\r\n                <p>{{ user.email }}</p>\r\n              </div>\r\n              <div class=\"user-actions\">\r\n                <button @click=\"chooseUser(user)\" class=\"btn btn-primary mb-2\">Choose</button>\r\n                <button @click=\"deleteUser(user.id)\" class=\"btn btn-danger mt-2\">Remove</button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      formName: '',\r\n      formEmail: '',\r\n      isEditMode: false,\r\n      editingUserId: null,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['users', 'currentUser'])\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchUsers', 'addUser', 'updateUser', 'deleteUser', 'setCurrentUser']),\r\nonSubmit() {\r\n  // Check if either the name or email is empty\r\n  if (!this.formName.trim() || !this.formEmail.trim()) {\r\n    // Display a popup alert if either is empty\r\n    alert('Both name and email must be provided.');\r\n    return; // Exit the function to prevent further execution\r\n  }\r\n\r\n  // Proceed with adding the user if both fields are filled\r\n  this.addUser({\r\n    name: this.formName,\r\n    email: this.formEmail\r\n  }).then(() => {\r\n    this.formName = '';\r\n    this.formEmail = '';\r\n    // Assuming you have a method or action to clear the current user selection\r\n    this.setCurrentUser({ id: null, name: '', email: '' });\r\n    this.isEditMode = false; // Reset edit mode if applicable\r\n  });\r\n},\r\nupdateUserDetails() {\r\n  // Check if either the name or email is empty\r\n  if (!this.formName.trim() || !this.formEmail.trim()) {\r\n    // Display a popup alert if either is empty\r\n    alert('Both name and email must be provided.');\r\n    return; // Exit the function to prevent further execution\r\n  }\r\n\r\n  // Proceed with the update if both fields are filled\r\n  if (this.isEditMode) {\r\n    this.updateUser({ id: this.editingUserId, name: this.formName, email: this.formEmail }).then(() => {\r\n      this.resetForm();\r\n    });\r\n  }\r\n},\r\n    chooseUser(user) {\r\n      this.editingUserId = user.id;\r\n      this.formName = user.name;\r\n      this.formEmail = user.email;\r\n      this.isEditMode = true;\r\n    },\r\n    resetForm() {\r\n      this.editingUserId = null;\r\n      this.formName = '';\r\n      this.formEmail = '';\r\n      this.isEditMode = false;\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchUsers()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-list-container {\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n   text-align: center;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: 1px solid #ddd;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.user-info h5 {\r\n  margin: 0;\r\n  font-size: 1.2em;\r\n}\r\n\r\n.user-info p {\r\n  margin: 0;\r\n  color: #777;\r\n}\r\n\r\n.user-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.user-actions .btn {\r\n  width: 80px;\r\n}\r\n</style>\r\n"],"mappings":"AA0CA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAK;AAE5C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,KAAK;MACjBC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGN,UAAU,CAAC,CAAC,OAAO,EAAE,aAAa,CAAC;EACxC,CAAC;EACDO,OAAO,EAAE;IACP,GAAGR,UAAU,CAAC,CAAC,YAAY,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;IAC1FS,QAAQA,CAAA,EAAG;MACT;MACA,IAAI,CAAC,IAAI,CAACN,QAAQ,CAACO,IAAI,CAAC,KAAK,CAAC,IAAI,CAACN,SAAS,CAACM,IAAI,CAAC,CAAC,EAAE;QACnD;QACAC,KAAK,CAAC,uCAAuC,CAAC;QAC9C,OAAM,CAAE;MACV;;MAEA;MACA,IAAI,CAACC,OAAO,CAAC;QACXC,IAAI,EAAE,IAAI,CAACV,QAAQ;QACnBW,KAAK,EAAE,IAAI,CAACV;MACd,CAAC,CAAC,CAACW,IAAI,CAAC,MAAM;QACZ,IAAI,CAACZ,QAAO,GAAI,EAAE;QAClB,IAAI,CAACC,SAAQ,GAAI,EAAE;QACnB;QACA,IAAI,CAACY,cAAc,CAAC;UAAEC,EAAE,EAAE,IAAI;UAAEJ,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC,CAAC;QACtD,IAAI,CAACT,UAAS,GAAI,KAAK,EAAE;MAC3B,CAAC,CAAC;IACJ,CAAC;IACDa,iBAAiBA,CAAA,EAAG;MAClB;MACA,IAAI,CAAC,IAAI,CAACf,QAAQ,CAACO,IAAI,CAAC,KAAK,CAAC,IAAI,CAACN,SAAS,CAACM,IAAI,CAAC,CAAC,EAAE;QACnD;QACAC,KAAK,CAAC,uCAAuC,CAAC;QAC9C,OAAM,CAAE;MACV;;MAEA;MACA,IAAI,IAAI,CAACN,UAAU,EAAE;QACnB,IAAI,CAACc,UAAU,CAAC;UAAEF,EAAE,EAAE,IAAI,CAACX,aAAa;UAAEO,IAAI,EAAE,IAAI,CAACV,QAAQ;UAAEW,KAAK,EAAE,IAAI,CAACV;QAAU,CAAC,CAAC,CAACW,IAAI,CAAC,MAAM;UACjG,IAAI,CAACK,SAAS,CAAC,CAAC;QAClB,CAAC,CAAC;MACJ;IACF,CAAC;IACGC,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAAChB,aAAY,GAAIgB,IAAI,CAACL,EAAE;MAC5B,IAAI,CAACd,QAAO,GAAImB,IAAI,CAACT,IAAI;MACzB,IAAI,CAACT,SAAQ,GAAIkB,IAAI,CAACR,KAAK;MAC3B,IAAI,CAACT,UAAS,GAAI,IAAI;IACxB,CAAC;IACDe,SAASA,CAAA,EAAG;MACV,IAAI,CAACd,aAAY,GAAI,IAAI;MACzB,IAAI,CAACH,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,SAAQ,GAAI,EAAE;MACnB,IAAI,CAACC,UAAS,GAAI,KAAK;IACzB;EACF,CAAC;EACDkB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC;EAClB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}