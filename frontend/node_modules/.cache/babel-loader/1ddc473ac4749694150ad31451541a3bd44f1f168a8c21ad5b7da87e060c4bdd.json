{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d13e59e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"form-container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"User Form\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\",\n  class: \"form-label\"\n}, \"Name:\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"mb-3\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"form-label\"\n}, \"Email:\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-success me-2\"\n}, \"Save\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_12 = {\n  class: \"user-list-container\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"user-list-header text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"List of Users\"), /*#__PURE__*/_createElementVNode(\"hr\")], -1 /* HOISTED */));\nconst _hoisted_14 = {\n  class: \"list-group\"\n};\nconst _hoisted_15 = {\n  class: \"user-info\"\n};\nconst _hoisted_16 = {\n  class: \"user-actions\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.onSubmit && $options.onSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.formName = $event),\n    class: \"form-control\",\n    id: \"name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formName]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.formEmail = $event),\n    class: \"form-control\",\n    id: \"email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formEmail]])]), _hoisted_10, _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.updateUserDetails && $options.updateUserDetails(...args)),\n    class: \"btn btn-primary\"\n  }, \"Update\")], 32 /* NEED_HYDRATION */)])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createElementVNode(\"ul\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.users, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: user.id,\n      class: \"list-group-item user-item\"\n    }, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"h5\", null, _toDisplayString(user.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(user.email), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n      onClick: $event => $options.chooseUser(user),\n      class: \"btn btn-primary mb-2\"\n    }, \"Choose\", 8 /* PROPS */, _hoisted_17), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.deleteUser(user.id),\n      class: \"btn btn-danger mt-2\"\n    }, \"Remove\", 8 /* PROPS */, _hoisted_18)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","args","$options","_hoisted_6","_hoisted_7","$event","$data","formName","id","_hoisted_8","_hoisted_9","formEmail","_hoisted_10","onClick","updateUserDetails","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","_renderList","_ctx","users","user","key","_hoisted_15","_toDisplayString","name","email","_hoisted_16","chooseUser","_hoisted_17","deleteUser","_hoisted_18"],"sources":["C:\\Users\\kaifa\\Desktop\\WT_LastLab\\frontend\\src\\components\\UserManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-container\">\r\n          <h2>User Form</h2>\r\n          <form @submit.prevent=\"onSubmit\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"name\" class=\"form-label\">Name:</label>\r\n              <input type=\"text\" v-model=\"formName\" class=\"form-control\" id=\"name\" >\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"email\" class=\"form-label\">Email:</label>\r\n              <input type=\"email\" v-model=\"formEmail\" class=\"form-control\" id=\"email\" >\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-success me-2\">Save</button>\r\n            <button type=\"button\" @click=\"updateUserDetails\" class=\"btn btn-primary\">Update</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"user-list-container\">\r\n          <div class=\"user-list-header text-center\">\r\n            <h2>List of Users</h2>\r\n            <hr />\r\n          </div>\r\n          <ul class=\"list-group\">\r\n            <li v-for=\"user in users\" :key=\"user.id\" class=\"list-group-item user-item\">\r\n              <div class=\"user-info\">\r\n                <h5>{{ user.name }}</h5>\r\n                <p>{{ user.email }}</p>\r\n              </div>\r\n              <div class=\"user-actions\">\r\n                <button @click=\"chooseUser(user)\" class=\"btn btn-primary mb-2\">Choose</button>\r\n                <button @click=\"deleteUser(user.id)\" class=\"btn btn-danger mt-2\">Remove</button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      formName: '',\r\n      formEmail: '',\r\n      isEditMode: false,\r\n      editingUserId: null,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['users', 'currentUser'])\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchUsers', 'addUser', 'updateUser', 'deleteUser', 'setCurrentUser']),\r\nonSubmit() {\r\n  // Check if either the name or email is empty\r\n  if (!this.formName.trim() || !this.formEmail.trim()) {\r\n    // Display a popup alert if either is empty\r\n    alert('Both name and email must be provided.');\r\n    return; // Exit the function to prevent further execution\r\n  }\r\n\r\n  // Proceed with adding the user if both fields are filled\r\n  this.addUser({\r\n    name: this.formName,\r\n    email: this.formEmail\r\n  }).then(() => {\r\n    this.formName = '';\r\n    this.formEmail = '';\r\n    // Assuming you have a method or action to clear the current user selection\r\n    this.setCurrentUser({ id: null, name: '', email: '' });\r\n    this.isEditMode = false; // Reset edit mode if applicable\r\n  });\r\n},\r\nupdateUserDetails() {\r\n  // Check if either the name or email is empty\r\n  if (!this.formName.trim() || !this.formEmail.trim()) {\r\n    // Display a popup alert if either is empty\r\n    alert('Both name and email must be provided.');\r\n    return; // Exit the function to prevent further execution\r\n  }\r\n\r\n  // Proceed with the update if both fields are filled\r\n  if (this.isEditMode) {\r\n    this.updateUser({ id: this.editingUserId, name: this.formName, email: this.formEmail }).then(() => {\r\n      this.resetForm();\r\n    });\r\n  }\r\n},\r\n    chooseUser(user) {\r\n      this.editingUserId = user.id;\r\n      this.formName = user.name;\r\n      this.formEmail = user.email;\r\n      this.isEditMode = true;\r\n    },\r\n    resetForm() {\r\n      this.editingUserId = null;\r\n      this.formName = '';\r\n      this.formEmail = '';\r\n      this.isEditMode = false;\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchUsers()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-list-container {\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: 1px solid #ddd;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.user-info h5 {\r\n  margin: 0;\r\n  font-size: 1.2em;\r\n}\r\n\r\n.user-info p {\r\n  margin: 0;\r\n  color: #777;\r\n}\r\n\r\n.user-actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.user-actions .btn {\r\n  width: 80px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}